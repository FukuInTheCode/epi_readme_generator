#! /bin/bash

if ! [ $# -eq 1 ]; then
    echo -e "USAGE:\n ./generator sshkey_of_the_repository" >&2
    exit 84
fi

if ! git clone "$1" tmp/ &> /dev/null; then
    echo "Error: cannot find $1!"
    exit 84
fi

cd tmp/

commit_message="[~] Update the README.md"

if ! [ -e tmp/README.md ]; then
    commit_message="[+] Add the README.md"
fi

read -ep "What is the name of the project? -> " project_name

if [ -z "$project_name" ]; then
    project_name="$1"
fi

echo -e "# $project_name\n" > README.md

read -ep "Add teammates -> " teammates

if [ ! -z "$teammates" ]; then
    echo -e " DONE WITH $teammates" >> README.md
fi

read -ep "What module the project is part of? (empty for none) -> " module_name

if ! [ -z "$module_name" ]; then
    read -ep "What grade do you acquired for $module_name? (empty if the module is not finished) -> " module_grade
    if [ -z "$module_grade" ]; then
        module_grade="N/A"
    fi
    echo -e "## Module: $module_name (Grade: $module_grade)\n" >> README.md
fi

read -ep "What is the description for this project? (empty for none) -> " project_desc

if ! [ -z "$project_desc" ]; then
    echo -e "## Project Description\n $project_desc\n" >> README.md
fi

read -ep "Enter the usage (empty for none) -> " project_usage

if ! [ -z "$project_usage" ]; then
    echo "### USAGE\n $project_usage" >> README.md
fi

read -ep "Enter Project Result (default 100%) -> " project_result

if [ -z "$project_result" ]; then
    project_result="100%"
fi

echo "# Result: $project_result" >> README.md

do_add_test=0

while true; do
    read -ep "Add the tests (empty for stop) -> " tests_str
    if [ -z "$tests_str" ]; then
        if [ $do_add_test == 1 ]; then
            echo "</details>\n" >> README.md
        fi
        break
    fi
    if [ $do_add_test == 0 ]; then
        do_add_test=1
        echo "<details>" >> README.md
        echo "<summary>Click to expand test results</summary>" >> README.md
        echo >> README.md
    fi
    formatted="$(python3 ../main.py "$tests_str")"
    if [ "$?" != 0 ]; then
        echo "ERROR: Incorrect input!"
        continue
    fi
    echo "$formatted" >> README.md
    echo >> README.md
done

read -ep "What Bonuses ? (empty for no bonuses) -> " project_bonus

if ! [ -z "$project_bonus" ]; then
    echo "## Bonuses" >> README.md
    echo "$project_bonus" >> README.md
    echo >> README.md
fi

read -ep "What Tests? (empty for no tests) -> " project_tests

if ! [ -z "$project_tests" ]; then
    echo "## Tests" >> README.md
    echo "$project_tests" >> README.md
    echo >> README.md
fi

read -ep "Do you want to check the READ.md ? (y/N)" check

if [ "$check" == "y" ] || [ "check" == "Y" ]; then
    nano README.md
fi

git add README.md &> /dev/null

git commit -m "$commit_message" &> /dev/null

git push -f origin main &> /dev/null

cd - &> /dev/null

rm -rf tmp/
